{"version":3,"file":"index-ydM-JIft.js","sources":["../../shared/services/RouterService/AdaptableRouterService/AdaptableRouterService.ts","../../shared/ui/theme/theme.ts","../../shared/services/DataError/DataError.ts","../../shared/services/HttpService/HttpService.ts","../../shared/services/HttpService/constants.ts","../../shared/services/ConfigService/ConfigService.ts","../../shared/services/ApiHttpClient/error.ts","../../shared/services/ApiHttpClient/utils/formatError/formatError.ts","../../shared/services/ApiHttpClient/ApiHttpClient.ts","../../shared/services/MonitoringErrorService/MonitoringErrorService.ts","../../screens/selectRecipient.tsx","../../screens/sign.tsx","../../application/app.tsx","../../application/main.tsx"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\n\nimport type { NavigateHandler, RouterService } from '../RouterService';\n\n/**\n * параметры для инициализации\n */\ntype RouterParams = {\n  navigate: NavigateHandler;\n};\n\n/**\n * реализация RouterService, предназначенная для того,\n * чтобы адаптировать реакт роутер к апи версии,\n * и иметь возможность использовать роутер в доменной логике\n */\nexport class AdaptableRouterService implements RouterService {\n  private navigateHandler?: NavigateHandler;\n\n  private currentPathname: string;\n\n  constructor() {\n    this.currentPathname = globalThis.location?.pathname ?? '';\n    makeAutoObservable(this);\n  }\n\n  public navigate: NavigateHandler = (path, params) => {\n    this.navigateHandler?.(path, params);\n  };\n\n  public init = (params: RouterParams) => {\n    this.navigateHandler = params.navigate;\n  };\n\n  public get pathname() {\n    return this.currentPathname;\n  }\n\n  /**\n   * метод для установки текущего адреса\n   */\n  public updatePathname = (pathname: string) => {\n    this.currentPathname = pathname;\n  };\n}\n\nexport const router = new AdaptableRouterService();\n","import { Brand, createTheme } from '@astral/ui';\nimport UbuntuBoldWoff from '@astral/ui/fonts/UbuntuBold.woff';\nimport UbuntuBoldWoff2 from '@astral/ui/fonts/UbuntuBold.woff2';\nimport UbuntuLightWoff from '@astral/ui/fonts/UbuntuLight.woff';\nimport UbuntuLightWoff2 from '@astral/ui/fonts/UbuntuLight.woff2';\nimport UbuntuRegularWoff from '@astral/ui/fonts/UbuntuRegular.woff';\nimport UbuntuRegularWoff2 from '@astral/ui/fonts/UbuntuRegular.woff2';\nimport UbuntuMediumWoff from '@astral/ui/fonts/UbuntuMedium.woff';\nimport UbuntuMediumWoff2 from '@astral/ui/fonts/UbuntuMedium.woff2';\n\nconst fontsUrls = {\n  bold: {\n    woff: UbuntuBoldWoff,\n    woff2: UbuntuBoldWoff2,\n  },\n  light: {\n    woff: UbuntuLightWoff,\n    woff2: UbuntuLightWoff2,\n  },\n  regular: {\n    woff: UbuntuRegularWoff,\n    woff2: UbuntuRegularWoff2,\n  },\n  medium: {\n    woff: UbuntuMediumWoff,\n    woff2: UbuntuMediumWoff2,\n  },\n};\n\nexport const theme = createTheme({ brand: Brand.DEFAULT, fontsUrls });\n","export type DataErrorItem<AdditionalInfo extends Record<string, unknown>> = {\n  message: string;\n  additionalInfo: AdditionalInfo;\n};\n\nexport class DataError<\n  AdditionalInfo extends Record<string, unknown>,\n> extends Error {\n  errors: DataErrorItem<AdditionalInfo>[];\n\n  constructor({ errors }: { errors: DataErrorItem<AdditionalInfo>[] }) {\n    super(errors[0].message);\n    this.errors = errors;\n  }\n}\n","import qs from 'query-string';\nimport type {\n  AxiosError,\n  AxiosInstance,\n  AxiosPromise,\n  AxiosRequestConfig,\n  AxiosResponse,\n} from 'axios';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nimport { DataError } from '../DataError';\n\ntype ErrorHandler = (error: HttpServiceError<unknown, unknown>) => unknown;\ntype ErrorFormatter<\n  CurrentDataError extends DataError<Record<string, unknown>>,\n  //  eslint-disable-next-line\n> = (error: HttpServiceError<any, any>) => CurrentDataError;\n\nexport interface HttpService extends AxiosInstance {\n  init: (config: HttpServiceInitConfig) => HttpService;\n  subscribeOnError(func: ErrorHandler): void;\n  initErrorFormatter<\n    CurrentDataError extends DataError<Record<string, unknown>>,\n  >(\n    func: ErrorFormatter<CurrentDataError>,\n  ): void;\n}\n\nexport type HttpServiceError<T, D> = AxiosError<T, D>;\n\nexport type HttpServiceResponse<T, D = T> = AxiosResponse<T, D>;\n\nexport type HttpServicePromise<T> = AxiosPromise<T>;\n\ntype HttpServiceConfig = AxiosRequestConfig;\n\ntype HttpServiceInitConfig = Pick<HttpServiceConfig, 'baseURL'>;\n\nexport const createHttpService = (\n  config: HttpServiceConfig = {},\n): HttpService => {\n  const errorListeners: ErrorHandler[] = [];\n  let errorFormatter: ErrorFormatter<DataError<Record<string, unknown>>> = () =>\n    new DataError({\n      errors: [{ message: 'Неизвестная ошибка', additionalInfo: {} }],\n    });\n\n  const httpService = axios.create({\n    timeout: 3000,\n    paramsSerializer: {\n      serialize: (params) => {\n        return qs.stringify(params);\n      },\n    },\n    ...config,\n  }) as HttpService;\n\n  axiosRetry(httpService, { retries: 3 });\n\n  httpService.subscribeOnError = (func) => {\n    errorListeners.push(func);\n  };\n\n  httpService.initErrorFormatter = (func) => {\n    errorFormatter = func;\n  };\n\n  httpService.interceptors.response.use(\n    (res) => res,\n    (error) => {\n      errorListeners.forEach((func) => {\n        func(error);\n      });\n\n      return Promise.reject(errorFormatter(error));\n    },\n  );\n\n  httpService.init = (newConfig?: HttpServiceInitConfig) => {\n    if (newConfig) {\n      httpService.defaults.baseURL = newConfig.baseURL;\n    }\n\n    return httpService;\n  };\n\n  return httpService;\n};\n\nexport const setStaticAuthToken = (httpService: HttpService, token: string) => {\n  // eslint-disable-next-line\n  httpService.defaults.headers.common.authorization = token;\n};\n","export const UNAUTHORIZED_HTTP_CODE = 401;\n\nexport const FORBIDDEN_HTTP_CODE = 403;\n\nexport const BAD_REQUEST_HTTP_CODE = 400;\n\nexport const NOT_FOUND_HTTP_CODE = 404;\n\nexport const INTERNAL_ERROR_HTTP_CODE = 500;\n\nexport const BAD_REQUEST_ERROR_INFO = {\n  code: BAD_REQUEST_HTTP_CODE,\n  message: 'Ошибка запроса',\n};\n\nexport const NOT_FOUND_ERROR_INFO = {\n  code: NOT_FOUND_HTTP_CODE,\n  message: 'Сервер не отвечает',\n};\n\nexport const UNAUTHORIZED_HTTP_INFO = {\n  code: UNAUTHORIZED_HTTP_CODE,\n  message: 'Пользователь не авторизован',\n};\n\nexport const INTERNAL_ERROR_INFO = {\n  httpCode: INTERNAL_ERROR_HTTP_CODE,\n  message: 'Неизвестная ошибка',\n};\n","export type Config = {\n  apiUrl: string;\n  monitoringDsn: string;\n  monitoringStand: string;\n  monitoringRelease: string;\n};\n\nexport class ConfigService {\n  #config: Config | undefined;\n\n  constructor() {\n    this.config = {} as Config;\n  }\n\n  init(config: Config) {\n    this.config = config as Config;\n  }\n\n  get config(): Config {\n    if (!this.#config) {\n      throw Error('ConfigService is not initialized');\n    }\n\n    return this.#config;\n  }\n\n  set config(config: Config) {\n    this.#config = config;\n  }\n}\n\nexport const configService = new ConfigService();\n","import { DataError } from '../DataError';\n\nexport class ApiDataError extends DataError<{\n  errorCustomField?: string;\n}> {}\n","import type { HttpServiceError } from '../../../HttpService';\nimport {\n  BAD_REQUEST_ERROR_INFO,\n  INTERNAL_ERROR_INFO,\n  NOT_FOUND_ERROR_INFO,\n  UNAUTHORIZED_HTTP_INFO,\n} from '../../../HttpService';\nimport { ApiDataError } from '../../error';\n\ntype ApiErrorInfo = {\n  statusCode: number;\n  errorMessage?: string;\n  errors?: Array<{\n    message: string;\n    additionalInfo: {\n      errorCustomField?: string;\n    };\n  }>;\n};\n\n// Если нет response, то это Network Error (403...)\nexport const getMainApiErrorRes = (\n  error: HttpServiceError<ApiErrorInfo, ApiErrorInfo>,\n): ApiErrorInfo => {\n  if (error?.response?.status === UNAUTHORIZED_HTTP_INFO.code) {\n    return {\n      statusCode: UNAUTHORIZED_HTTP_INFO.code,\n      errors: [\n        {\n          message: UNAUTHORIZED_HTTP_INFO.message,\n          additionalInfo: {},\n        },\n      ],\n    };\n  }\n\n  return (\n    error.response?.data || {\n      statusCode: INTERNAL_ERROR_INFO.httpCode,\n      errors: [\n        {\n          message: INTERNAL_ERROR_INFO.message,\n          additionalInfo: {},\n        },\n      ],\n    }\n  );\n};\n\nexport const formatApiError = (\n  mainApiError: HttpServiceError<ApiErrorInfo, ApiErrorInfo>,\n): ApiDataError => {\n  const errorResponse: ApiErrorInfo = getMainApiErrorRes(mainApiError);\n\n  const { statusCode } = errorResponse;\n\n  if (errorResponse.errors && errorResponse.errors.length) {\n    return new ApiDataError({\n      errors: errorResponse.errors,\n    });\n  }\n\n  switch (statusCode) {\n    case BAD_REQUEST_ERROR_INFO.code:\n      return new ApiDataError({\n        errors: [\n          {\n            message: BAD_REQUEST_ERROR_INFO.message,\n            additionalInfo: {},\n          },\n        ],\n      });\n\n    case NOT_FOUND_ERROR_INFO.code:\n      return new ApiDataError({\n        errors: [\n          {\n            message: NOT_FOUND_ERROR_INFO.message,\n            additionalInfo: {},\n          },\n        ],\n      });\n\n    default:\n      return new ApiDataError({\n        errors: [\n          {\n            message: INTERNAL_ERROR_INFO.message,\n            additionalInfo: {},\n          },\n        ],\n      });\n  }\n};\n","import { createHttpService } from '../HttpService';\nimport { configService } from '../ConfigService';\n\nimport type { ApiDataError } from './error';\nimport { formatApiError } from './utils';\n\n/**\n * Создаем экземпляр httpService\n */\nconst httpService = createHttpService();\n\n/**\n *\n *@description Инициализация apiHttpClient\n */\nexport const initApiHttpClient = () => {\n  const apiHttpClient = httpService.init({\n    baseURL: configService.config.apiUrl,\n  });\n\n  apiHttpClient.initErrorFormatter<ApiDataError>(formatApiError);\n};\n\n/**\n * @description Http service для взаимодействия с основным api\n * */\nexport const apiHttpClient = httpService;\n","import { captureException, init } from '@sentry/browser';\n\nimport { configService } from '../ConfigService';\n\ntype MonitoringErrorServiceConfig = {\n  monitoringDsn: string;\n  monitoringStand: string;\n  monitoringRelease: string;\n};\n\nclass MonitoringErrorService {\n  public captureException = captureException;\n\n  constructor(config: MonitoringErrorServiceConfig) {\n    this.init(config);\n  }\n\n  private init = (config: MonitoringErrorServiceConfig) => {\n    init({\n      dsn: config.monitoringDsn,\n      release: config.monitoringRelease,\n      dist: config.monitoringStand,\n      tracesSampleRate: 1.0,\n    });\n  };\n}\n\nexport const monitoringErrorService = new MonitoringErrorService(\n  configService.config,\n);\n","import { Button, Filename, MenuItem, Select, Typography } from '@astral/ui';\nimport { useEffect, useState } from 'react';\n\n// Объявляем типы для WebApp\ndeclare global {\n  interface Window {\n    Telegram: {\n      WebApp: {\n        ready(): void;\n        sendData(data: string): void;\n        expand(): void;\n      };\n    };\n  }\n}\n\nconst params = new URLSearchParams(window.location.hash.split('?')[1]);\n\nconst {\n  users,\n  fileData,\n}: {\n  users: Array<{\n    id: string;\n    first_name: string;\n    last_name: string;\n  }>;\n  fileData: { fileUrl: string; fileName: string };\n} = JSON.parse(params.get('data') || '{}');\n\nlet valueG;\n\nexport const SelectRecipient = () => {\n  const [value, setValue] = useState<string>();\n\n  const handleSend = () => {\n    const data = users.find(\n      (user) => `${user.first_name} ${user.last_name}` === valueG,\n    );\n\n    window.Telegram.WebApp.sendData(\n      JSON.stringify({\n        data,\n        fileData,\n        type: 'sign',\n      }),\n    );\n  };\n\n  const handleSelect = (event) => {\n    setValue(event.target.value);\n    valueG = event.target.value;\n    window.Telegram.WebApp.MainButton.show();\n  };\n\n  useEffect(() => {\n    window.Telegram.WebApp.MainButton.setText('Отправить');\n    window.Telegram.WebApp.MainButton.onClick(handleSend);\n    // Инициализируем WebApp при монтировании компонента\n    window.Telegram.WebApp.ready();\n  }, []);\n\n  useEffect(() => {\n    if (!value) {\n      window.Telegram.WebApp.MainButton.hide();\n    }\n  }, [value]);\n\n  return (\n    <div style={{ padding: '50px 12px 12px', display: 'grid', gap: 20 }}>\n      <Typography variant=\"h4\">Выберите получателя для файла:</Typography>\n      <div style={{ maxWidth: 300 }}>\n        <Filename variant=\"h4\" color=\"info\">\n          {fileData.fileName}\n        </Filename>\n      </div>\n      <Select\n        label=\"Получатель\"\n        placeholder=\"Выберите получателя\"\n        value={value}\n        onChange={handleSelect}\n      >\n        {users.map((user) => (\n          <MenuItem value={`${user.first_name} ${user.last_name}`}>\n            {user.first_name} {user.last_name}\n          </MenuItem>\n        ))}\n      </Select>\n    </div>\n  );\n};\n","import {\n  Button,\n  ContentState,\n  Filename,\n  Iframe,\n  MenuItem,\n  Select,\n  Typography,\n} from '@astral/ui';\nimport { useEffect, useState } from 'react';\n\n// Объявляем типы для WebApp\ndeclare global {\n  interface Window {\n    Telegram: {\n      WebApp: {\n        ready(): void;\n        sendData(data: string): void;\n        expand(): void;\n        MainButton: {\n          setText(text: string): void;\n          onClick(fn: () => void): void;\n          show(): void;\n          showProgress(): void;\n          hideProgress(): void;\n        };\n      };\n    };\n  }\n}\n\nconst params = new URLSearchParams(window.location.hash.split('?')[1]);\n\nconst {\n  user,\n  fileData,\n}: {\n  fileData: { fileUrl: string; fileName: string };\n  user: any;\n} = JSON.parse(params.get('data') || '{}');\n\nexport const Sign = () => {\n  const handleSign = () => {\n    window.Telegram.WebApp.MainButton.showProgress();\n\n    setTimeout(() => {\n      window.Telegram.WebApp.sendData(\n        JSON.stringify({ data: { user, fileData } }),\n      );\n    }, 2000);\n  };\n\n  useEffect(() => {\n    window.Telegram.WebApp.MainButton.setText('Подписать');\n    window.Telegram.WebApp.MainButton.onClick(handleSign);\n    window.Telegram.WebApp.MainButton.show();\n    // Инициализируем WebApp при монтировании компонента\n    window.Telegram.WebApp.ready();\n  }, []);\n\n  return (\n    <div style={{ padding: '50px 12px 12px', display: 'grid', gap: 20 }}>\n      <Typography variant=\"h4\">Подписание файла:</Typography>\n      <div style={{ maxWidth: 300 }}>\n        <Filename variant=\"h4\" color=\"info\">\n          {fileData.fileName}\n        </Filename>\n      </div>\n    </div>\n  );\n};\n","import {\n  enableStaticRendering as enableMobxStaticRendering,\n  observer,\n} from 'mobx-react-lite';\n\nimport {\n  ConfigProvider,\n  ThemeProvider,\n  configService,\n  initApiHttpClient,\n  monitoringErrorService,\n  noDataImgSrc,\n  outdatedReleaseImgSrc,\n  placeholderImgSrc,\n  theme,\n} from '@example/shared';\n\nimport { SelectRecipient, Sign } from '../screens';\n\nconst params = new URLSearchParams(window.location.hash.split('?')[1]);\n\nconfigService.init({\n  apiUrl: window.__ENV__.PUBLIC_API_URL,\n  monitoringDsn: window.__ENV__.PUBLIC_SENTRY_DSN,\n  monitoringStand: window.__ENV__.PUBLIC_SENTRY_ENV,\n  monitoringRelease: window.__ENV__.PUBLIC_RELEASE_TAG,\n});\n\ninitApiHttpClient();\nenableMobxStaticRendering(typeof window === 'undefined');\n\nexport const App = observer(() => {\n  return (\n    <ConfigProvider\n      imagesMap={{\n        noDataImgSrc: noDataImgSrc,\n        defaultErrorImgSrc: placeholderImgSrc,\n        outdatedReleaseErrorImgSrc: outdatedReleaseImgSrc,\n      }}\n      captureException={monitoringErrorService.captureException}\n    >\n      <ThemeProvider theme={theme}>\n        {params.get('type') === 'select' ? <SelectRecipient /> : <Sign />}\n      </ThemeProvider>\n    </ConfigProvider>\n  );\n});\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './app';\n\nconst renderApp = (): void => {\n  const root = document.getElementById('root');\n\n  if (!root) {\n    throw Error('Рут не найден');\n  }\n\n  createRoot(root).render(\n    <StrictMode>\n      <App />\n    </StrictMode>,\n  );\n};\n\nrenderApp();\n"],"names":["AdaptableRouterService","__publicField","path","params","_a","pathname","makeAutoObservable","fontsUrls","UbuntuBoldWoff","UbuntuBoldWoff2","UbuntuLightWoff","UbuntuLightWoff2","UbuntuRegularWoff","UbuntuRegularWoff2","UbuntuMediumWoff","UbuntuMediumWoff2","theme","createTheme","Brand","DataError","errors","createHttpService","config","errorListeners","errorFormatter","httpService","axios","qs","axiosRetry","func","res","error","newConfig","UNAUTHORIZED_HTTP_CODE","BAD_REQUEST_HTTP_CODE","NOT_FOUND_HTTP_CODE","INTERNAL_ERROR_HTTP_CODE","BAD_REQUEST_ERROR_INFO","NOT_FOUND_ERROR_INFO","UNAUTHORIZED_HTTP_INFO","INTERNAL_ERROR_INFO","ConfigService","__privateAdd","_config","__privateGet","__privateSet","configService","ApiDataError","getMainApiErrorRes","_b","formatApiError","mainApiError","errorResponse","statusCode","initApiHttpClient","MonitoringErrorService","captureException","init","monitoringErrorService","users","fileData","valueG","SelectRecipient","value","setValue","useState","handleSend","data","user","handleSelect","event","useEffect","jsxs","jsx","Typography","Filename","Select","MenuItem","Sign","handleSign","enableMobxStaticRendering","App","observer","ConfigProvider","noDataImgSrc","placeholderImgSrc","outdatedReleaseImgSrc","ThemeProvider","renderApp","root","createRoot","StrictMode"],"mappings":"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"}